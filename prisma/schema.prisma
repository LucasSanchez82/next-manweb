generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  mangas        Manga[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Manga {
  id             Int               @id @default(autoincrement())
  title          String
  linkManga      String
  linkImage      String
  chapter        Float
  isDeleted      Boolean           @default(false)
  userId         String
  historiques    HistoriqueManga[]
  user           User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  MangaCategorie MangaCategorie[] 

  @@index([title, userId, isDeleted])
}

model HistoriqueManga {
  id        Int      @id @default(autoincrement())
  title     String
  linkManga String
  linkImage String
  chapter   Float
  updatedAt DateTime @default(now())
  mangaId   Int
  manga     Manga    @relation(fields: [mangaId], references: [id])
}

model Categorie {
  id             Int             @id @default(autoincrement())
  libelle        String @unique 
  MangaCategorie MangaCategorie[]

  @@index([libelle])
}

model MangaCategorie {
  mangaId     Int       
  categorieId Int       
  Categorie   Categorie @relation(fields: [categorieId], references: [id])
  Manga       Manga     @relation(fields: [mangaId], references: [id], onDelete: Cascade)

  @@id([mangaId, categorieId])
  @@unique([mangaId, categorieId])
}
